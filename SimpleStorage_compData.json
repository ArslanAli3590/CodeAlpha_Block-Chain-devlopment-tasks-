{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"Simple Storage Smart Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract SimpleStorage {\\r\\n    // Integer variable to store value\\r\\n    uint public value;\\r\\n\\r\\n    // Constructor (optional) to initialize value\\r\\n    constructor(uint _initialValue) {\\r\\n        value = _initialValue;\\r\\n    }\\r\\n\\r\\n    // Function to increment value\\r\\n    function increment() public {\\r\\n        value += 1;\\r\\n    }\\r\\n\\r\\n    // Function to decrement value\\r\\n    function decrement() public {\\r\\n        require(value > 0, \\\"Value cannot be negative\\\"); // safe check\\r\\n        value -= 1;\\r\\n    }\\r\\n\\r\\n    // Getter function (optional, already public variable works)\\r\\n    function getValue() public view returns (uint) {\\r\\n        return value;\\r\\n    }\\r\\n}\\r\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "SimpleStorage",
	"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialValue\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Simple Storage Smart Contract.sol\":\"SimpleStorage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Simple Storage Smart Contract.sol\":{\"keccak256\":\"0x057d1f26642ff9630b1d2108e4566f03616f20b8d774164018232e276506aacb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://156cc9a86acc23259529825f60ed20060f38bacbcf75140c5d64ca63c348939c\",\"dweb:/ipfs/QmTXcuUZUYmKpQCs4GrYaWRAVegRDAJujMzM4ritw7nean\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_13": {
				"entryPoint": null,
				"id": 13,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"abi_decode_t_uint256_fromMemory": {
				"entryPoint": 89,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256_fromMemory": {
				"entryPoint": 107,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 61,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 57,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 70,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:1048:1",
					"nodeType": "YulBlock",
					"src": "0:1048:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:32:1",
								"nodeType": "YulBlock",
								"src": "379:32:1",
								"statements": [
									{
										"nativeSrc": "389:16:1",
										"nodeType": "YulAssignment",
										"src": "389:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "400:5:1",
											"nodeType": "YulIdentifier",
											"src": "400:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "334:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:77:1"
						},
						{
							"body": {
								"nativeSrc": "460:79:1",
								"nodeType": "YulBlock",
								"src": "460:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "517:16:1",
											"nodeType": "YulBlock",
											"src": "517:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "526:1:1",
																"nodeType": "YulLiteral",
																"src": "526:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "529:1:1",
																"nodeType": "YulLiteral",
																"src": "529:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "519:6:1",
															"nodeType": "YulIdentifier",
															"src": "519:6:1"
														},
														"nativeSrc": "519:12:1",
														"nodeType": "YulFunctionCall",
														"src": "519:12:1"
													},
													"nativeSrc": "519:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "519:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "483:5:1",
															"nodeType": "YulIdentifier",
															"src": "483:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "508:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "508:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "490:17:1",
																"nodeType": "YulIdentifier",
																"src": "490:17:1"
															},
															"nativeSrc": "490:24:1",
															"nodeType": "YulFunctionCall",
															"src": "490:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "480:2:1",
														"nodeType": "YulIdentifier",
														"src": "480:2:1"
													},
													"nativeSrc": "480:35:1",
													"nodeType": "YulFunctionCall",
													"src": "480:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "473:6:1",
												"nodeType": "YulIdentifier",
												"src": "473:6:1"
											},
											"nativeSrc": "473:43:1",
											"nodeType": "YulFunctionCall",
											"src": "473:43:1"
										},
										"nativeSrc": "470:63:1",
										"nodeType": "YulIf",
										"src": "470:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "417:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "453:5:1",
									"nodeType": "YulTypedName",
									"src": "453:5:1",
									"type": ""
								}
							],
							"src": "417:122:1"
						},
						{
							"body": {
								"nativeSrc": "608:80:1",
								"nodeType": "YulBlock",
								"src": "608:80:1",
								"statements": [
									{
										"nativeSrc": "618:22:1",
										"nodeType": "YulAssignment",
										"src": "618:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "633:6:1",
													"nodeType": "YulIdentifier",
													"src": "633:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "627:5:1",
												"nodeType": "YulIdentifier",
												"src": "627:5:1"
											},
											"nativeSrc": "627:13:1",
											"nodeType": "YulFunctionCall",
											"src": "627:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "618:5:1",
												"nodeType": "YulIdentifier",
												"src": "618:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "676:5:1",
													"nodeType": "YulIdentifier",
													"src": "676:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "649:26:1",
												"nodeType": "YulIdentifier",
												"src": "649:26:1"
											},
											"nativeSrc": "649:33:1",
											"nodeType": "YulFunctionCall",
											"src": "649:33:1"
										},
										"nativeSrc": "649:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "649:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256_fromMemory",
							"nativeSrc": "545:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "586:6:1",
									"nodeType": "YulTypedName",
									"src": "586:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "594:3:1",
									"nodeType": "YulTypedName",
									"src": "594:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "602:5:1",
									"nodeType": "YulTypedName",
									"src": "602:5:1",
									"type": ""
								}
							],
							"src": "545:143:1"
						},
						{
							"body": {
								"nativeSrc": "771:274:1",
								"nodeType": "YulBlock",
								"src": "771:274:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "817:83:1",
											"nodeType": "YulBlock",
											"src": "817:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "819:77:1",
															"nodeType": "YulIdentifier",
															"src": "819:77:1"
														},
														"nativeSrc": "819:79:1",
														"nodeType": "YulFunctionCall",
														"src": "819:79:1"
													},
													"nativeSrc": "819:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "819:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "792:7:1",
															"nodeType": "YulIdentifier",
															"src": "792:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "801:9:1",
															"nodeType": "YulIdentifier",
															"src": "801:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "788:3:1",
														"nodeType": "YulIdentifier",
														"src": "788:3:1"
													},
													"nativeSrc": "788:23:1",
													"nodeType": "YulFunctionCall",
													"src": "788:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "813:2:1",
													"nodeType": "YulLiteral",
													"src": "813:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "784:3:1",
												"nodeType": "YulIdentifier",
												"src": "784:3:1"
											},
											"nativeSrc": "784:32:1",
											"nodeType": "YulFunctionCall",
											"src": "784:32:1"
										},
										"nativeSrc": "781:119:1",
										"nodeType": "YulIf",
										"src": "781:119:1"
									},
									{
										"nativeSrc": "910:128:1",
										"nodeType": "YulBlock",
										"src": "910:128:1",
										"statements": [
											{
												"nativeSrc": "925:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "925:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "939:1:1",
													"nodeType": "YulLiteral",
													"src": "939:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "929:6:1",
														"nodeType": "YulTypedName",
														"src": "929:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "954:74:1",
												"nodeType": "YulAssignment",
												"src": "954:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1000:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "996:3:1",
																"nodeType": "YulIdentifier",
																"src": "996:3:1"
															},
															"nativeSrc": "996:22:1",
															"nodeType": "YulFunctionCall",
															"src": "996:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1020:7:1",
															"nodeType": "YulIdentifier",
															"src": "1020:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "964:31:1",
														"nodeType": "YulIdentifier",
														"src": "964:31:1"
													},
													"nativeSrc": "964:64:1",
													"nodeType": "YulFunctionCall",
													"src": "964:64:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "954:6:1",
														"nodeType": "YulIdentifier",
														"src": "954:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256_fromMemory",
							"nativeSrc": "694:351:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "741:9:1",
									"nodeType": "YulTypedName",
									"src": "741:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "752:7:1",
									"nodeType": "YulTypedName",
									"src": "752:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "764:6:1",
									"nodeType": "YulTypedName",
									"src": "764:6:1",
									"type": ""
								}
							],
							"src": "694:351:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "6080604052348015600e575f5ffd5b506040516103323803806103328339818101604052810190602e9190606b565b805f81905550506091565b5f5ffd5b5f819050919050565b604d81603d565b81146056575f5ffd5b50565b5f815190506065816046565b92915050565b5f60208284031215607d57607c6039565b5b5f6088848285016059565b91505092915050565b6102948061009e5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063209652551461004e5780632baeceb71461006c5780633fa4f24514610076578063d09de08a14610094575b5f5ffd5b61005661009e565b604051610063919061013a565b60405180910390f35b6100746100a6565b005b61007e610103565b60405161008b919061013a565b60405180910390f35b61009c610108565b005b5f5f54905090565b5f5f54116100e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e0906101ad565b60405180910390fd5b60015f5f8282546100fa91906101f8565b92505081905550565b5f5481565b60015f5f828254610119919061022b565b92505081905550565b5f819050919050565b61013481610122565b82525050565b5f60208201905061014d5f83018461012b565b92915050565b5f82825260208201905092915050565b7f56616c75652063616e6e6f74206265206e6567617469766500000000000000005f82015250565b5f610197601883610153565b91506101a282610163565b602082019050919050565b5f6020820190508181035f8301526101c48161018b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020282610122565b915061020d83610122565b9250828203905081811115610225576102246101cb565b5b92915050565b5f61023582610122565b915061024083610122565b9250828201905080821115610258576102576101cb565b5b9291505056fea264697066735822122041d7b012f7a36594150c771fa03aaa0f3d175e3de332543338edc506a389204764736f6c634300081e0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x332 CODESIZE SUB DUP1 PUSH2 0x332 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH1 0x2E SWAP2 SWAP1 PUSH1 0x6B JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP PUSH1 0x91 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4D DUP2 PUSH1 0x3D JUMP JUMPDEST DUP2 EQ PUSH1 0x56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH1 0x65 DUP2 PUSH1 0x46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7D JUMPI PUSH1 0x7C PUSH1 0x39 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x88 DUP5 DUP3 DUP6 ADD PUSH1 0x59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294 DUP1 PUSH2 0x9E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20965255 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SLOAD GT PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP1 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x122 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D PUSH0 DUP4 ADD DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C75652063616E6E6F74206265206E656761746976650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197 PUSH1 0x18 DUP4 PUSH2 0x153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2 DUP3 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C4 DUP2 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x202 DUP3 PUSH2 0x122 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D DUP4 PUSH2 0x122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x235 DUP3 PUSH2 0x122 JUMP JUMPDEST SWAP2 POP PUSH2 0x240 DUP4 PUSH2 0x122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x258 JUMPI PUSH2 0x257 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xD7 0xB0 SLT 0xF7 LOG3 PUSH6 0x94150C771FA0 GASPRICE 0xAA 0xF RETURNDATASIZE OR MCOPY RETURNDATASIZE CALLF 0x3254 CALLER CODESIZE 0xED 0xC5 MOD LOG3 DUP10 KECCAK256 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
		"sourceMap": "60:647:0:-:0;;;207:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;258:13;250:5;:21;;;;207:72;60:647;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;60:647:0:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_initialValue",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "decrement",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getValue",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "increment",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "value",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 3,
				"contract": "Simple Storage Smart Contract.sol:SimpleStorage",
				"label": "value",
				"offset": 0,
				"slot": "0",
				"type": "t_uint256"
			}
		],
		"types": {
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var _initialValue = /* var of type uint256 here */ ;\nvar simplestorageContract = new web3.eth.Contract([{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialValue\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar simplestorage = simplestorageContract.deploy({\n     data: '0x6080604052348015600e575f5ffd5b506040516103323803806103328339818101604052810190602e9190606b565b805f81905550506091565b5f5ffd5b5f819050919050565b604d81603d565b81146056575f5ffd5b50565b5f815190506065816046565b92915050565b5f60208284031215607d57607c6039565b5b5f6088848285016059565b91505092915050565b6102948061009e5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063209652551461004e5780632baeceb71461006c5780633fa4f24514610076578063d09de08a14610094575b5f5ffd5b61005661009e565b604051610063919061013a565b60405180910390f35b6100746100a6565b005b61007e610103565b60405161008b919061013a565b60405180910390f35b61009c610108565b005b5f5f54905090565b5f5f54116100e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e0906101ad565b60405180910390fd5b60015f5f8282546100fa91906101f8565b92505081905550565b5f5481565b60015f5f828254610119919061022b565b92505081905550565b5f819050919050565b61013481610122565b82525050565b5f60208201905061014d5f83018461012b565b92915050565b5f82825260208201905092915050565b7f56616c75652063616e6e6f74206265206e6567617469766500000000000000005f82015250565b5f610197601883610153565b91506101a282610163565b602082019050919050565b5f6020820190508181035f8301526101c48161018b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020282610122565b915061020d83610122565b9250828203905081811115610225576102246101cb565b5b92915050565b5f61023582610122565b915061024083610122565b9250828201905080821115610258576102576101cb565b5b9291505056fea264697066735822122041d7b012f7a36594150c771fa03aaa0f3d175e3de332543338edc506a389204764736f6c634300081e0033', \n     arguments: [\n          _initialValue,\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"20965255": "getValue()",
		"2baeceb7": "decrement()",
		"d09de08a": "increment()",
		"3fa4f245": "value()"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "132000",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"decrement()": "infinite",
			"getValue()": "2409",
			"increment()": "infinite",
			"value()": "2446"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@decrement_36": {
				"entryPoint": 166,
				"id": 36,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@getValue_44": {
				"entryPoint": 158,
				"id": 44,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@increment_21": {
				"entryPoint": 264,
				"id": 21,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@value_3": {
				"entryPoint": 259,
				"id": 3,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"abi_encode_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 395,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 299,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 429,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 314,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 339,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 555,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 504,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 290,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 459,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4": {
				"entryPoint": 355,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:2174:1",
					"nodeType": "YulBlock",
					"src": "0:2174:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "52:32:1",
								"nodeType": "YulBlock",
								"src": "52:32:1",
								"statements": [
									{
										"nativeSrc": "62:16:1",
										"nodeType": "YulAssignment",
										"src": "62:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "73:5:1",
											"nodeType": "YulIdentifier",
											"src": "73:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "62:7:1",
												"nodeType": "YulIdentifier",
												"src": "62:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "7:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "34:5:1",
									"nodeType": "YulTypedName",
									"src": "34:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "44:7:1",
									"nodeType": "YulTypedName",
									"src": "44:7:1",
									"type": ""
								}
							],
							"src": "7:77:1"
						},
						{
							"body": {
								"nativeSrc": "155:53:1",
								"nodeType": "YulBlock",
								"src": "155:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "172:3:1",
													"nodeType": "YulIdentifier",
													"src": "172:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "195:5:1",
															"nodeType": "YulIdentifier",
															"src": "195:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "177:17:1",
														"nodeType": "YulIdentifier",
														"src": "177:17:1"
													},
													"nativeSrc": "177:24:1",
													"nodeType": "YulFunctionCall",
													"src": "177:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "165:6:1",
												"nodeType": "YulIdentifier",
												"src": "165:6:1"
											},
											"nativeSrc": "165:37:1",
											"nodeType": "YulFunctionCall",
											"src": "165:37:1"
										},
										"nativeSrc": "165:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "165:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "90:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "143:5:1",
									"nodeType": "YulTypedName",
									"src": "143:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "150:3:1",
									"nodeType": "YulTypedName",
									"src": "150:3:1",
									"type": ""
								}
							],
							"src": "90:118:1"
						},
						{
							"body": {
								"nativeSrc": "312:124:1",
								"nodeType": "YulBlock",
								"src": "312:124:1",
								"statements": [
									{
										"nativeSrc": "322:26:1",
										"nodeType": "YulAssignment",
										"src": "322:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "334:9:1",
													"nodeType": "YulIdentifier",
													"src": "334:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "345:2:1",
													"nodeType": "YulLiteral",
													"src": "345:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "330:3:1",
												"nodeType": "YulIdentifier",
												"src": "330:3:1"
											},
											"nativeSrc": "330:18:1",
											"nodeType": "YulFunctionCall",
											"src": "330:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "322:4:1",
												"nodeType": "YulIdentifier",
												"src": "322:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "402:6:1",
													"nodeType": "YulIdentifier",
													"src": "402:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "415:9:1",
															"nodeType": "YulIdentifier",
															"src": "415:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "426:1:1",
															"nodeType": "YulLiteral",
															"src": "426:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "411:3:1",
														"nodeType": "YulIdentifier",
														"src": "411:3:1"
													},
													"nativeSrc": "411:17:1",
													"nodeType": "YulFunctionCall",
													"src": "411:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "358:43:1",
												"nodeType": "YulIdentifier",
												"src": "358:43:1"
											},
											"nativeSrc": "358:71:1",
											"nodeType": "YulFunctionCall",
											"src": "358:71:1"
										},
										"nativeSrc": "358:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "358:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "214:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "284:9:1",
									"nodeType": "YulTypedName",
									"src": "284:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "296:6:1",
									"nodeType": "YulTypedName",
									"src": "296:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "307:4:1",
									"nodeType": "YulTypedName",
									"src": "307:4:1",
									"type": ""
								}
							],
							"src": "214:222:1"
						},
						{
							"body": {
								"nativeSrc": "538:73:1",
								"nodeType": "YulBlock",
								"src": "538:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "555:3:1",
													"nodeType": "YulIdentifier",
													"src": "555:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "560:6:1",
													"nodeType": "YulIdentifier",
													"src": "560:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "548:6:1",
												"nodeType": "YulIdentifier",
												"src": "548:6:1"
											},
											"nativeSrc": "548:19:1",
											"nodeType": "YulFunctionCall",
											"src": "548:19:1"
										},
										"nativeSrc": "548:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "548:19:1"
									},
									{
										"nativeSrc": "576:29:1",
										"nodeType": "YulAssignment",
										"src": "576:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "595:3:1",
													"nodeType": "YulIdentifier",
													"src": "595:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "600:4:1",
													"nodeType": "YulLiteral",
													"src": "600:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "591:3:1",
												"nodeType": "YulIdentifier",
												"src": "591:3:1"
											},
											"nativeSrc": "591:14:1",
											"nodeType": "YulFunctionCall",
											"src": "591:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "576:11:1",
												"nodeType": "YulIdentifier",
												"src": "576:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "442:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "510:3:1",
									"nodeType": "YulTypedName",
									"src": "510:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "515:6:1",
									"nodeType": "YulTypedName",
									"src": "515:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "526:11:1",
									"nodeType": "YulTypedName",
									"src": "526:11:1",
									"type": ""
								}
							],
							"src": "442:169:1"
						},
						{
							"body": {
								"nativeSrc": "723:68:1",
								"nodeType": "YulBlock",
								"src": "723:68:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "745:6:1",
															"nodeType": "YulIdentifier",
															"src": "745:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "753:1:1",
															"nodeType": "YulLiteral",
															"src": "753:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "741:3:1",
														"nodeType": "YulIdentifier",
														"src": "741:3:1"
													},
													"nativeSrc": "741:14:1",
													"nodeType": "YulFunctionCall",
													"src": "741:14:1"
												},
												{
													"hexValue": "56616c75652063616e6e6f74206265206e65676174697665",
													"kind": "string",
													"nativeSrc": "757:26:1",
													"nodeType": "YulLiteral",
													"src": "757:26:1",
													"type": "",
													"value": "Value cannot be negative"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "734:6:1",
												"nodeType": "YulIdentifier",
												"src": "734:6:1"
											},
											"nativeSrc": "734:50:1",
											"nodeType": "YulFunctionCall",
											"src": "734:50:1"
										},
										"nativeSrc": "734:50:1",
										"nodeType": "YulExpressionStatement",
										"src": "734:50:1"
									}
								]
							},
							"name": "store_literal_in_memory_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4",
							"nativeSrc": "617:174:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "715:6:1",
									"nodeType": "YulTypedName",
									"src": "715:6:1",
									"type": ""
								}
							],
							"src": "617:174:1"
						},
						{
							"body": {
								"nativeSrc": "943:220:1",
								"nodeType": "YulBlock",
								"src": "943:220:1",
								"statements": [
									{
										"nativeSrc": "953:74:1",
										"nodeType": "YulAssignment",
										"src": "953:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1019:3:1",
													"nodeType": "YulIdentifier",
													"src": "1019:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1024:2:1",
													"nodeType": "YulLiteral",
													"src": "1024:2:1",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "960:58:1",
												"nodeType": "YulIdentifier",
												"src": "960:58:1"
											},
											"nativeSrc": "960:67:1",
											"nodeType": "YulFunctionCall",
											"src": "960:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "953:3:1",
												"nodeType": "YulIdentifier",
												"src": "953:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1125:3:1",
													"nodeType": "YulIdentifier",
													"src": "1125:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4",
												"nativeSrc": "1036:88:1",
												"nodeType": "YulIdentifier",
												"src": "1036:88:1"
											},
											"nativeSrc": "1036:93:1",
											"nodeType": "YulFunctionCall",
											"src": "1036:93:1"
										},
										"nativeSrc": "1036:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "1036:93:1"
									},
									{
										"nativeSrc": "1138:19:1",
										"nodeType": "YulAssignment",
										"src": "1138:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1149:3:1",
													"nodeType": "YulIdentifier",
													"src": "1149:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1154:2:1",
													"nodeType": "YulLiteral",
													"src": "1154:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1145:3:1",
												"nodeType": "YulIdentifier",
												"src": "1145:3:1"
											},
											"nativeSrc": "1145:12:1",
											"nodeType": "YulFunctionCall",
											"src": "1145:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "1138:3:1",
												"nodeType": "YulIdentifier",
												"src": "1138:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "797:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "931:3:1",
									"nodeType": "YulTypedName",
									"src": "931:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "939:3:1",
									"nodeType": "YulTypedName",
									"src": "939:3:1",
									"type": ""
								}
							],
							"src": "797:366:1"
						},
						{
							"body": {
								"nativeSrc": "1340:248:1",
								"nodeType": "YulBlock",
								"src": "1340:248:1",
								"statements": [
									{
										"nativeSrc": "1350:26:1",
										"nodeType": "YulAssignment",
										"src": "1350:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1362:9:1",
													"nodeType": "YulIdentifier",
													"src": "1362:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1373:2:1",
													"nodeType": "YulLiteral",
													"src": "1373:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1358:3:1",
												"nodeType": "YulIdentifier",
												"src": "1358:3:1"
											},
											"nativeSrc": "1358:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1358:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1350:4:1",
												"nodeType": "YulIdentifier",
												"src": "1350:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1397:9:1",
															"nodeType": "YulIdentifier",
															"src": "1397:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1408:1:1",
															"nodeType": "YulLiteral",
															"src": "1408:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1393:3:1",
														"nodeType": "YulIdentifier",
														"src": "1393:3:1"
													},
													"nativeSrc": "1393:17:1",
													"nodeType": "YulFunctionCall",
													"src": "1393:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "1416:4:1",
															"nodeType": "YulIdentifier",
															"src": "1416:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "1422:9:1",
															"nodeType": "YulIdentifier",
															"src": "1422:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1412:3:1",
														"nodeType": "YulIdentifier",
														"src": "1412:3:1"
													},
													"nativeSrc": "1412:20:1",
													"nodeType": "YulFunctionCall",
													"src": "1412:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1386:6:1",
												"nodeType": "YulIdentifier",
												"src": "1386:6:1"
											},
											"nativeSrc": "1386:47:1",
											"nodeType": "YulFunctionCall",
											"src": "1386:47:1"
										},
										"nativeSrc": "1386:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "1386:47:1"
									},
									{
										"nativeSrc": "1442:139:1",
										"nodeType": "YulAssignment",
										"src": "1442:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "1576:4:1",
													"nodeType": "YulIdentifier",
													"src": "1576:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1450:124:1",
												"nodeType": "YulIdentifier",
												"src": "1450:124:1"
											},
											"nativeSrc": "1450:131:1",
											"nodeType": "YulFunctionCall",
											"src": "1450:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1442:4:1",
												"nodeType": "YulIdentifier",
												"src": "1442:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "1169:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1320:9:1",
									"nodeType": "YulTypedName",
									"src": "1320:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1335:4:1",
									"nodeType": "YulTypedName",
									"src": "1335:4:1",
									"type": ""
								}
							],
							"src": "1169:419:1"
						},
						{
							"body": {
								"nativeSrc": "1622:152:1",
								"nodeType": "YulBlock",
								"src": "1622:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1639:1:1",
													"nodeType": "YulLiteral",
													"src": "1639:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1642:77:1",
													"nodeType": "YulLiteral",
													"src": "1642:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1632:6:1",
												"nodeType": "YulIdentifier",
												"src": "1632:6:1"
											},
											"nativeSrc": "1632:88:1",
											"nodeType": "YulFunctionCall",
											"src": "1632:88:1"
										},
										"nativeSrc": "1632:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "1632:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1736:1:1",
													"nodeType": "YulLiteral",
													"src": "1736:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "1739:4:1",
													"nodeType": "YulLiteral",
													"src": "1739:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1729:6:1",
												"nodeType": "YulIdentifier",
												"src": "1729:6:1"
											},
											"nativeSrc": "1729:15:1",
											"nodeType": "YulFunctionCall",
											"src": "1729:15:1"
										},
										"nativeSrc": "1729:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "1729:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1760:1:1",
													"nodeType": "YulLiteral",
													"src": "1760:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1763:4:1",
													"nodeType": "YulLiteral",
													"src": "1763:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1753:6:1",
												"nodeType": "YulIdentifier",
												"src": "1753:6:1"
											},
											"nativeSrc": "1753:15:1",
											"nodeType": "YulFunctionCall",
											"src": "1753:15:1"
										},
										"nativeSrc": "1753:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "1753:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "1594:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "1594:180:1"
						},
						{
							"body": {
								"nativeSrc": "1825:149:1",
								"nodeType": "YulBlock",
								"src": "1825:149:1",
								"statements": [
									{
										"nativeSrc": "1835:25:1",
										"nodeType": "YulAssignment",
										"src": "1835:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "1858:1:1",
													"nodeType": "YulIdentifier",
													"src": "1858:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "1840:17:1",
												"nodeType": "YulIdentifier",
												"src": "1840:17:1"
											},
											"nativeSrc": "1840:20:1",
											"nodeType": "YulFunctionCall",
											"src": "1840:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "1835:1:1",
												"nodeType": "YulIdentifier",
												"src": "1835:1:1"
											}
										]
									},
									{
										"nativeSrc": "1869:25:1",
										"nodeType": "YulAssignment",
										"src": "1869:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "1892:1:1",
													"nodeType": "YulIdentifier",
													"src": "1892:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "1874:17:1",
												"nodeType": "YulIdentifier",
												"src": "1874:17:1"
											},
											"nativeSrc": "1874:20:1",
											"nodeType": "YulFunctionCall",
											"src": "1874:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "1869:1:1",
												"nodeType": "YulIdentifier",
												"src": "1869:1:1"
											}
										]
									},
									{
										"nativeSrc": "1903:17:1",
										"nodeType": "YulAssignment",
										"src": "1903:17:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "1915:1:1",
													"nodeType": "YulIdentifier",
													"src": "1915:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "1918:1:1",
													"nodeType": "YulIdentifier",
													"src": "1918:1:1"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "1911:3:1",
												"nodeType": "YulIdentifier",
												"src": "1911:3:1"
											},
											"nativeSrc": "1911:9:1",
											"nodeType": "YulFunctionCall",
											"src": "1911:9:1"
										},
										"variableNames": [
											{
												"name": "diff",
												"nativeSrc": "1903:4:1",
												"nodeType": "YulIdentifier",
												"src": "1903:4:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1945:22:1",
											"nodeType": "YulBlock",
											"src": "1945:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "1947:16:1",
															"nodeType": "YulIdentifier",
															"src": "1947:16:1"
														},
														"nativeSrc": "1947:18:1",
														"nodeType": "YulFunctionCall",
														"src": "1947:18:1"
													},
													"nativeSrc": "1947:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "1947:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nativeSrc": "1936:4:1",
													"nodeType": "YulIdentifier",
													"src": "1936:4:1"
												},
												{
													"name": "x",
													"nativeSrc": "1942:1:1",
													"nodeType": "YulIdentifier",
													"src": "1942:1:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1933:2:1",
												"nodeType": "YulIdentifier",
												"src": "1933:2:1"
											},
											"nativeSrc": "1933:11:1",
											"nodeType": "YulFunctionCall",
											"src": "1933:11:1"
										},
										"nativeSrc": "1930:37:1",
										"nodeType": "YulIf",
										"src": "1930:37:1"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nativeSrc": "1780:194:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "1811:1:1",
									"nodeType": "YulTypedName",
									"src": "1811:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "1814:1:1",
									"nodeType": "YulTypedName",
									"src": "1814:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nativeSrc": "1820:4:1",
									"nodeType": "YulTypedName",
									"src": "1820:4:1",
									"type": ""
								}
							],
							"src": "1780:194:1"
						},
						{
							"body": {
								"nativeSrc": "2024:147:1",
								"nodeType": "YulBlock",
								"src": "2024:147:1",
								"statements": [
									{
										"nativeSrc": "2034:25:1",
										"nodeType": "YulAssignment",
										"src": "2034:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "2057:1:1",
													"nodeType": "YulIdentifier",
													"src": "2057:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "2039:17:1",
												"nodeType": "YulIdentifier",
												"src": "2039:17:1"
											},
											"nativeSrc": "2039:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2039:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "2034:1:1",
												"nodeType": "YulIdentifier",
												"src": "2034:1:1"
											}
										]
									},
									{
										"nativeSrc": "2068:25:1",
										"nodeType": "YulAssignment",
										"src": "2068:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "2091:1:1",
													"nodeType": "YulIdentifier",
													"src": "2091:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "2073:17:1",
												"nodeType": "YulIdentifier",
												"src": "2073:17:1"
											},
											"nativeSrc": "2073:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2073:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "2068:1:1",
												"nodeType": "YulIdentifier",
												"src": "2068:1:1"
											}
										]
									},
									{
										"nativeSrc": "2102:16:1",
										"nodeType": "YulAssignment",
										"src": "2102:16:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "2113:1:1",
													"nodeType": "YulIdentifier",
													"src": "2113:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "2116:1:1",
													"nodeType": "YulIdentifier",
													"src": "2116:1:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2109:3:1",
												"nodeType": "YulIdentifier",
												"src": "2109:3:1"
											},
											"nativeSrc": "2109:9:1",
											"nodeType": "YulFunctionCall",
											"src": "2109:9:1"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "2102:3:1",
												"nodeType": "YulIdentifier",
												"src": "2102:3:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "2142:22:1",
											"nodeType": "YulBlock",
											"src": "2142:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "2144:16:1",
															"nodeType": "YulIdentifier",
															"src": "2144:16:1"
														},
														"nativeSrc": "2144:18:1",
														"nodeType": "YulFunctionCall",
														"src": "2144:18:1"
													},
													"nativeSrc": "2144:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "2144:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "2134:1:1",
													"nodeType": "YulIdentifier",
													"src": "2134:1:1"
												},
												{
													"name": "sum",
													"nativeSrc": "2137:3:1",
													"nodeType": "YulIdentifier",
													"src": "2137:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2131:2:1",
												"nodeType": "YulIdentifier",
												"src": "2131:2:1"
											},
											"nativeSrc": "2131:10:1",
											"nodeType": "YulFunctionCall",
											"src": "2131:10:1"
										},
										"nativeSrc": "2128:36:1",
										"nodeType": "YulIf",
										"src": "2128:36:1"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "1980:191:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "2011:1:1",
									"nodeType": "YulTypedName",
									"src": "2011:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "2014:1:1",
									"nodeType": "YulTypedName",
									"src": "2014:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "2020:3:1",
									"nodeType": "YulTypedName",
									"src": "2020:3:1",
									"type": ""
								}
							],
							"src": "1980:191:1"
						}
					]
				},
				"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value cannot be negative\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063209652551461004e5780632baeceb71461006c5780633fa4f24514610076578063d09de08a14610094575b5f5ffd5b61005661009e565b604051610063919061013a565b60405180910390f35b6100746100a6565b005b61007e610103565b60405161008b919061013a565b60405180910390f35b61009c610108565b005b5f5f54905090565b5f5f54116100e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e0906101ad565b60405180910390fd5b60015f5f8282546100fa91906101f8565b92505081905550565b5f5481565b60015f5f828254610119919061022b565b92505081905550565b5f819050919050565b61013481610122565b82525050565b5f60208201905061014d5f83018461012b565b92915050565b5f82825260208201905092915050565b7f56616c75652063616e6e6f74206265206e6567617469766500000000000000005f82015250565b5f610197601883610153565b91506101a282610163565b602082019050919050565b5f6020820190508181035f8301526101c48161018b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020282610122565b915061020d83610122565b9250828203905081811115610225576102246101cb565b5b92915050565b5f61023582610122565b915061024083610122565b9250828201905080821115610258576102576101cb565b5b9291505056fea264697066735822122041d7b012f7a36594150c771fa03aaa0f3d175e3de332543338edc506a389204764736f6c634300081e0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20965255 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SLOAD GT PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP1 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x122 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D PUSH0 DUP4 ADD DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56616C75652063616E6E6F74206265206E656761746976650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197 PUSH1 0x18 DUP4 PUSH2 0x153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2 DUP3 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C4 DUP2 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x202 DUP3 PUSH2 0x122 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D DUP4 PUSH2 0x122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x235 DUP3 PUSH2 0x122 JUMP JUMPDEST SWAP2 POP PUSH2 0x240 DUP4 PUSH2 0x122 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x258 JUMPI PUSH2 0x257 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xD7 0xB0 SLT 0xF7 LOG3 PUSH6 0x94150C771FA0 GASPRICE 0xAA 0xF RETURNDATASIZE OR MCOPY RETURNDATASIZE CALLF 0x3254 CALLER CODESIZE 0xED 0xC5 MOD LOG3 DUP10 KECCAK256 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
		"sourceMap": "60:647:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;424:128;;;:::i;:::-;;130:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:57;;;:::i;:::-;;626:78;667:4;691:5;;684:12;;626:78;:::o;424:128::-;479:1;471:5;;:9;463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;543:1;534:5;;:10;;;;;;;:::i;:::-;;;;;;;;424:128::o;130:17::-;;;;:::o;323:57::-;371:1;362:5;;:10;;;;;;;:::i;:::-;;;;;;;;323:57::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:169::-;526:11;560:6;555:3;548:19;600:4;595:3;591:14;576:29;;442:169;;;;:::o;617:174::-;757:26;753:1;745:6;741:14;734:50;617:174;:::o;797:366::-;939:3;960:67;1024:2;1019:3;960:67;:::i;:::-;953:74;;1036:93;1125:3;1036:93;:::i;:::-;1154:2;1149:3;1145:12;1138:19;;797:366;;;:::o;1169:419::-;1335:4;1373:2;1362:9;1358:18;1350:26;;1422:9;1416:4;1412:20;1408:1;1397:9;1393:17;1386:47;1450:131;1576:4;1450:131;:::i;:::-;1442:139;;1169:419;;;:::o;1594:180::-;1642:77;1639:1;1632:88;1739:4;1736:1;1729:15;1763:4;1760:1;1753:15;1780:194;1820:4;1840:20;1858:1;1840:20;:::i;:::-;1835:25;;1874:20;1892:1;1874:20;:::i;:::-;1869:25;;1918:1;1915;1911:9;1903:17;;1942:1;1936:4;1933:11;1930:37;;;1947:18;;:::i;:::-;1930:37;1780:194;;;;:::o;1980:191::-;2020:3;2039:20;2057:1;2039:20;:::i;:::-;2034:25;;2073:20;2091:1;2073:20;:::i;:::-;2068:25;;2116:1;2113;2109:9;2102:16;;2137:3;2134:1;2131:10;2128:36;;;2144:18;;:::i;:::-;2128:36;1980:191;;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract SimpleStorage {\\r\\n  ...\n  PUSH 40\t\t\tcontract SimpleStorage {\\r\\n  ...\n  MSTORE \t\t\tcontract SimpleStorage {\\r\\n  ...\n  CALLVALUE \t\t\tconstructor(uint _initialValue...\n  DUP1 \t\t\tconstructor(uint _initialValue...\n  ISZERO \t\t\tconstructor(uint _initialValue...\n  PUSH [tag] 1\t\t\tconstructor(uint _initialValue...\n  JUMPI \t\t\tconstructor(uint _initialValue...\n  PUSH 0\t\t\tconstructor(uint _initialValue...\n  PUSH 0\t\t\tconstructor(uint _initialValue...\n  REVERT \t\t\tconstructor(uint _initialValue...\ntag 1\t\t\tconstructor(uint _initialValue...\n  JUMPDEST \t\t\tconstructor(uint _initialValue...\n  POP \t\t\tconstructor(uint _initialValue...\n  PUSH 40\t\t\tconstructor(uint _initialValue...\n  MLOAD \t\t\tconstructor(uint _initialValue...\n  PUSHSIZE \t\t\tconstructor(uint _initialValue...\n  CODESIZE \t\t\tconstructor(uint _initialValue...\n  SUB \t\t\tconstructor(uint _initialValue...\n  DUP1 \t\t\tconstructor(uint _initialValue...\n  PUSHSIZE \t\t\tconstructor(uint _initialValue...\n  DUP4 \t\t\tconstructor(uint _initialValue...\n  CODECOPY \t\t\tconstructor(uint _initialValue...\n  DUP2 \t\t\tconstructor(uint _initialValue...\n  DUP2 \t\t\tconstructor(uint _initialValue...\n  ADD \t\t\tconstructor(uint _initialValue...\n  PUSH 40\t\t\tconstructor(uint _initialValue...\n  MSTORE \t\t\tconstructor(uint _initialValue...\n  DUP2 \t\t\tconstructor(uint _initialValue...\n  ADD \t\t\tconstructor(uint _initialValue...\n  SWAP1 \t\t\tconstructor(uint _initialValue...\n  PUSH [tag] 2\t\t\tconstructor(uint _initialValue...\n  SWAP2 \t\t\tconstructor(uint _initialValue...\n  SWAP1 \t\t\tconstructor(uint _initialValue...\n  PUSH [tag] 3\t\t\tconstructor(uint _initialValue...\n  JUMP \t\t\tconstructor(uint _initialValue...\ntag 2\t\t\tconstructor(uint _initialValue...\n  JUMPDEST \t\t\tconstructor(uint _initialValue...\n  DUP1 \t\t\t_initialValue\n  PUSH 0\t\t\tvalue\n  DUP2 \t\t\tvalue = _initialValue\n  SWAP1 \t\t\tvalue = _initialValue\n  SSTORE \t\t\tvalue = _initialValue\n  POP \t\t\tvalue = _initialValue\n  POP \t\t\tconstructor(uint _initialValue...\n  PUSH [tag] 6\t\t\tcontract SimpleStorage {\\r\\n  ...\n  JUMP \t\t\tcontract SimpleStorage {\\r\\n  ...\ntag 8\t\t\t  // Integer variable to store...\n  JUMPDEST \t\t\t  // Integer variable to store...\n  PUSH 0\t\t\ta\n  PUSH 0\t\t\te\n  REVERT \t\t\titialize val\ntag 10\t\t\tcrement() public {\\r\\n        ...\n  JUMPDEST \t\t\tcrement() public {\\r\\n        ...\n  PUSH 0\t\t\t1;\\r\\n   \n  DUP2 \t\t\tto de\n  SWAP1 \t\t\t/ Function to de\n  POP \t\t\t/ Function to de\n  SWAP2 \t\t\tcrement() public {\\r\\n        ...\n  SWAP1 \t\t\tcrement() public {\\r\\n        ...\n  POP \t\t\tcrement() public {\\r\\n        ...\n  JUMP \t\t\tcrement() public {\\r\\n        ...\ntag 11\t\t\te\\r\\n    function decrement() ...\n  JUMPDEST \t\t\te\\r\\n    function decrement() ...\n  PUSH [tag] 19\t\t\tannot be negative\"); // \n  DUP2 \t\t\t); //\n  PUSH [tag] 10\t\t\tannot be negative\"); // \n  JUMP \t\t\tannot be negative\"); // \ntag 19\t\t\tannot be negative\"); // \n  JUMPDEST \t\t\tannot be negative\"); // \n  DUP2 \t\t\tValue\n  EQ \t\t\t, \"Value cannot be negative\");...\n  PUSH [tag] 20\t\t\t(value > 0, \"Value cannot be n...\n  JUMPI \t\t\t(value > 0, \"Value cannot be n...\n  PUSH 0\t\t\t \n  PUSH 0\t\t\t \n  REVERT \t\t\tcheck\\r\\n     \ntag 20\t\t\t(value > 0, \"Value cannot be n...\n  JUMPDEST \t\t\t(value > 0, \"Value cannot be n...\n  POP \t\t\te\\r\\n    function decrement() ...\n  JUMP \t\t\te\\r\\n    function decrement() ...\ntag 12\t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\n  JUMPDEST \t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\n  PUSH 0\t\t\tic va\n  DUP2 \t\t\tn getV\n  MLOAD \t\t\tunction getVa\n  SWAP1 \t\t\ts)\\r\\n    function getVa\n  POP \t\t\ts)\\r\\n    function getVa\n  PUSH [tag] 22\t\t\tlic view returns (uint) {\\r\\n ...\n  DUP2 \t\t\t     \n  PUSH [tag] 11\t\t\tlic view returns (uint) {\\r\\n ...\n  JUMP \t\t\tlic view returns (uint) {\\r\\n ...\ntag 22\t\t\tlic view returns (uint) {\\r\\n ...\n  JUMPDEST \t\t\tlic view returns (uint) {\\r\\n ...\n  SWAP3 \t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\n  SWAP2 \t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\n  POP \t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\n  POP \t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\n  JUMP \t\t\t\\r\\n    }\\r\\n\\r\\n    // Getter...\ntag 3\t\t\tue;\\r\\n    }\\r\\n}\\r\\n\n  JUMPDEST \t\t\tue;\\r\\n    }\\r\\n}\\r\\n\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  DUP5 \t\t\t\n  SUB \t\t\t\n  SLT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 24\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 25\t\t\t\n  PUSH [tag] 8\t\t\t\n  JUMP \t\t\t\ntag 25\t\t\t\n  JUMPDEST \t\t\t\ntag 24\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 26\t\t\t\n  DUP5 \t\t\t\n  DUP3 \t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 26\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\tue;\\r\\n    }\\r\\n}\\r\\n\n  SWAP2 \t\t\tue;\\r\\n    }\\r\\n}\\r\\n\n  POP \t\t\tue;\\r\\n    }\\r\\n}\\r\\n\n  POP \t\t\tue;\\r\\n    }\\r\\n}\\r\\n\n  JUMP \t\t\tue;\\r\\n    }\\r\\n}\\r\\n\ntag 6\t\t\tcontract SimpleStorage {\\r\\n  ...\n  JUMPDEST \t\t\tcontract SimpleStorage {\\r\\n  ...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract SimpleStorage {\\r\\n  ...\n  DUP1 \t\t\tcontract SimpleStorage {\\r\\n  ...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract SimpleStorage {\\r\\n  ...\n  PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n  CODECOPY \t\t\tcontract SimpleStorage {\\r\\n  ...\n  PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n  RETURN \t\t\tcontract SimpleStorage {\\r\\n  ...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 40\t\t\tcontract SimpleStorage {\\r\\n  ...\n      MSTORE \t\t\tcontract SimpleStorage {\\r\\n  ...\n      CALLVALUE \t\t\tcontract SimpleStorage {\\r\\n  ...\n      DUP1 \t\t\tcontract SimpleStorage {\\r\\n  ...\n      ISZERO \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH [tag] 1\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPI \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n      REVERT \t\t\tcontract SimpleStorage {\\r\\n  ...\n    tag 1\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPDEST \t\t\tcontract SimpleStorage {\\r\\n  ...\n      POP \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 4\t\t\tcontract SimpleStorage {\\r\\n  ...\n      CALLDATASIZE \t\t\tcontract SimpleStorage {\\r\\n  ...\n      LT \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH [tag] 2\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPI \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n      CALLDATALOAD \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH E0\t\t\tcontract SimpleStorage {\\r\\n  ...\n      SHR \t\t\tcontract SimpleStorage {\\r\\n  ...\n      DUP1 \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 20965255\t\t\tcontract SimpleStorage {\\r\\n  ...\n      EQ \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH [tag] 3\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPI \t\t\tcontract SimpleStorage {\\r\\n  ...\n      DUP1 \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 2BAECEB7\t\t\tcontract SimpleStorage {\\r\\n  ...\n      EQ \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH [tag] 4\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPI \t\t\tcontract SimpleStorage {\\r\\n  ...\n      DUP1 \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 3FA4F245\t\t\tcontract SimpleStorage {\\r\\n  ...\n      EQ \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH [tag] 5\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPI \t\t\tcontract SimpleStorage {\\r\\n  ...\n      DUP1 \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH D09DE08A\t\t\tcontract SimpleStorage {\\r\\n  ...\n      EQ \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH [tag] 6\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPI \t\t\tcontract SimpleStorage {\\r\\n  ...\n    tag 2\t\t\tcontract SimpleStorage {\\r\\n  ...\n      JUMPDEST \t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n      PUSH 0\t\t\tcontract SimpleStorage {\\r\\n  ...\n      REVERT \t\t\tcontract SimpleStorage {\\r\\n  ...\n    tag 3\t\t\tfunction getValue() public vie...\n      JUMPDEST \t\t\tfunction getValue() public vie...\n      PUSH [tag] 7\t\t\tfunction getValue() public vie...\n      PUSH [tag] 8\t\t\tfunction getValue() public vie...\n      JUMP \t\t\tfunction getValue() public vie...\n    tag 7\t\t\tfunction getValue() public vie...\n      JUMPDEST \t\t\tfunction getValue() public vie...\n      PUSH 40\t\t\tfunction getValue() public vie...\n      MLOAD \t\t\tfunction getValue() public vie...\n      PUSH [tag] 9\t\t\tfunction getValue() public vie...\n      SWAP2 \t\t\tfunction getValue() public vie...\n      SWAP1 \t\t\tfunction getValue() public vie...\n      PUSH [tag] 10\t\t\tfunction getValue() public vie...\n      JUMP \t\t\tfunction getValue() public vie...\n    tag 9\t\t\tfunction getValue() public vie...\n      JUMPDEST \t\t\tfunction getValue() public vie...\n      PUSH 40\t\t\tfunction getValue() public vie...\n      MLOAD \t\t\tfunction getValue() public vie...\n      DUP1 \t\t\tfunction getValue() public vie...\n      SWAP2 \t\t\tfunction getValue() public vie...\n      SUB \t\t\tfunction getValue() public vie...\n      SWAP1 \t\t\tfunction getValue() public vie...\n      RETURN \t\t\tfunction getValue() public vie...\n    tag 4\t\t\tfunction decrement() public {\\...\n      JUMPDEST \t\t\tfunction decrement() public {\\...\n      PUSH [tag] 11\t\t\tfunction decrement() public {\\...\n      PUSH [tag] 12\t\t\tfunction decrement() public {\\...\n      JUMP \t\t\tfunction decrement() public {\\...\n    tag 11\t\t\tfunction decrement() public {\\...\n      JUMPDEST \t\t\tfunction decrement() public {\\...\n      STOP \t\t\tfunction decrement() public {\\...\n    tag 5\t\t\tuint public value\n      JUMPDEST \t\t\tuint public value\n      PUSH [tag] 13\t\t\tuint public value\n      PUSH [tag] 14\t\t\tuint public value\n      JUMP \t\t\tuint public value\n    tag 13\t\t\tuint public value\n      JUMPDEST \t\t\tuint public value\n      PUSH 40\t\t\tuint public value\n      MLOAD \t\t\tuint public value\n      PUSH [tag] 15\t\t\tuint public value\n      SWAP2 \t\t\tuint public value\n      SWAP1 \t\t\tuint public value\n      PUSH [tag] 10\t\t\tuint public value\n      JUMP \t\t\tuint public value\n    tag 15\t\t\tuint public value\n      JUMPDEST \t\t\tuint public value\n      PUSH 40\t\t\tuint public value\n      MLOAD \t\t\tuint public value\n      DUP1 \t\t\tuint public value\n      SWAP2 \t\t\tuint public value\n      SUB \t\t\tuint public value\n      SWAP1 \t\t\tuint public value\n      RETURN \t\t\tuint public value\n    tag 6\t\t\tfunction increment() public {\\...\n      JUMPDEST \t\t\tfunction increment() public {\\...\n      PUSH [tag] 16\t\t\tfunction increment() public {\\...\n      PUSH [tag] 17\t\t\tfunction increment() public {\\...\n      JUMP \t\t\tfunction increment() public {\\...\n    tag 16\t\t\tfunction increment() public {\\...\n      JUMPDEST \t\t\tfunction increment() public {\\...\n      STOP \t\t\tfunction increment() public {\\...\n    tag 8\t\t\tfunction getValue() public vie...\n      JUMPDEST \t\t\tfunction getValue() public vie...\n      PUSH 0\t\t\tuint\n      PUSH 0\t\t\tvalue\n      SLOAD \t\t\tvalue\n      SWAP1 \t\t\treturn value\n      POP \t\t\treturn value\n      SWAP1 \t\t\tfunction getValue() public vie...\n      JUMP \t\t\tfunction getValue() public vie...\n    tag 12\t\t\tfunction decrement() public {\\...\n      JUMPDEST \t\t\tfunction decrement() public {\\...\n      PUSH 0\t\t\t0\n      PUSH 0\t\t\tvalue\n      SLOAD \t\t\tvalue\n      GT \t\t\tvalue > 0\n      PUSH [tag] 20\t\t\trequire(value > 0, \"Value cann...\n      JUMPI \t\t\trequire(value > 0, \"Value cann...\n      PUSH 40\t\t\trequire(value > 0, \"Value cann...\n      MLOAD \t\t\trequire(value > 0, \"Value cann...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(value > 0, \"Value cann...\n      DUP2 \t\t\trequire(value > 0, \"Value cann...\n      MSTORE \t\t\trequire(value > 0, \"Value cann...\n      PUSH 4\t\t\trequire(value > 0, \"Value cann...\n      ADD \t\t\trequire(value > 0, \"Value cann...\n      PUSH [tag] 21\t\t\trequire(value > 0, \"Value cann...\n      SWAP1 \t\t\trequire(value > 0, \"Value cann...\n      PUSH [tag] 22\t\t\trequire(value > 0, \"Value cann...\n      JUMP \t\t\trequire(value > 0, \"Value cann...\n    tag 21\t\t\trequire(value > 0, \"Value cann...\n      JUMPDEST \t\t\trequire(value > 0, \"Value cann...\n      PUSH 40\t\t\trequire(value > 0, \"Value cann...\n      MLOAD \t\t\trequire(value > 0, \"Value cann...\n      DUP1 \t\t\trequire(value > 0, \"Value cann...\n      SWAP2 \t\t\trequire(value > 0, \"Value cann...\n      SUB \t\t\trequire(value > 0, \"Value cann...\n      SWAP1 \t\t\trequire(value > 0, \"Value cann...\n      REVERT \t\t\trequire(value > 0, \"Value cann...\n    tag 20\t\t\trequire(value > 0, \"Value cann...\n      JUMPDEST \t\t\trequire(value > 0, \"Value cann...\n      PUSH 1\t\t\t1\n      PUSH 0\t\t\tvalue\n      PUSH 0\t\t\tvalue\n      DUP3 \t\t\tvalue -= 1\n      DUP3 \t\t\tvalue -= 1\n      SLOAD \t\t\tvalue -= 1\n      PUSH [tag] 23\t\t\tvalue -= 1\n      SWAP2 \t\t\tvalue -= 1\n      SWAP1 \t\t\tvalue -= 1\n      PUSH [tag] 24\t\t\tvalue -= 1\n      JUMP \t\t\tvalue -= 1\n    tag 23\t\t\tvalue -= 1\n      JUMPDEST \t\t\tvalue -= 1\n      SWAP3 \t\t\tvalue -= 1\n      POP \t\t\tvalue -= 1\n      POP \t\t\tvalue -= 1\n      DUP2 \t\t\tvalue -= 1\n      SWAP1 \t\t\tvalue -= 1\n      SSTORE \t\t\tvalue -= 1\n      POP \t\t\tvalue -= 1\n      JUMP \t\t\tfunction decrement() public {\\...\n    tag 14\t\t\tuint public value\n      JUMPDEST \t\t\tuint public value\n      PUSH 0\t\t\tuint public value\n      SLOAD \t\t\tuint public value\n      DUP2 \t\t\tuint public value\n      JUMP \t\t\tuint public value\n    tag 17\t\t\tfunction increment() public {\\...\n      JUMPDEST \t\t\tfunction increment() public {\\...\n      PUSH 1\t\t\t1\n      PUSH 0\t\t\tvalue\n      PUSH 0\t\t\tvalue\n      DUP3 \t\t\tvalue += 1\n      DUP3 \t\t\tvalue += 1\n      SLOAD \t\t\tvalue += 1\n      PUSH [tag] 26\t\t\tvalue += 1\n      SWAP2 \t\t\tvalue += 1\n      SWAP1 \t\t\tvalue += 1\n      PUSH [tag] 27\t\t\tvalue += 1\n      JUMP \t\t\tvalue += 1\n    tag 26\t\t\tvalue += 1\n      JUMPDEST \t\t\tvalue += 1\n      SWAP3 \t\t\tvalue += 1\n      POP \t\t\tvalue += 1\n      POP \t\t\tvalue += 1\n      DUP2 \t\t\tvalue += 1\n      SWAP1 \t\t\tvalue += 1\n      SSTORE \t\t\tvalue += 1\n      POP \t\t\tvalue += 1\n      JUMP \t\t\tfunction increment() public {\\...\n    tag 28\t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n      PUSH 0\t\t\tdity ^0\n      DUP2 \t\t\tleSto\n      SWAP1 \t\t\tntract SimpleSto\n      POP \t\t\tntract SimpleSto\n      SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n      SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n      POP \t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\n    tag 29\t\t\t// Integer variable to store v...\n      JUMPDEST \t\t\t// Integer variable to store v...\n      PUSH [tag] 37\t\t\tnal) to initialize value\n      DUP2 \t\t\t valu\n      PUSH [tag] 28\t\t\tnal) to initialize value\n      JUMP \t\t\tnal) to initialize value\n    tag 37\t\t\tnal) to initialize value\n      JUMPDEST \t\t\tnal) to initialize value\n      DUP3 \t\t\topt\n      MSTORE \t\t\tuctor (optional) to initialize...\n      POP \t\t\t// Integer variable to store v...\n      POP \t\t\t// Integer variable to store v...\n      JUMP \t\t\t// Integer variable to store v...\n    tag 10\t\t\tctor(uint _initialValue) {\\r\\n...\n      JUMPDEST \t\t\tctor(uint _initialValue) {\\r\\n...\n      PUSH 0\t\t\tment\n      PUSH 20\t\t\tub\n      DUP3 \t\t\tcrement()\n      ADD \t\t\tn increment() publ\n      SWAP1 \t\t\t function increment() publ\n      POP \t\t\t function increment() publ\n      PUSH [tag] 39\t\t\t    value += 1;\\r\\n    }\\r\\n\\r...\n      PUSH 0\t\t\tn\n      DUP4 \t\t\tlue\\r\\n    \n      ADD \t\t\tt value\\r\\n    func\n      DUP5 \t\t\t decre\n      PUSH [tag] 29\t\t\t    value += 1;\\r\\n    }\\r\\n\\r...\n      JUMP \t\t\t    value += 1;\\r\\n    }\\r\\n\\r...\n    tag 39\t\t\t    value += 1;\\r\\n    }\\r\\n\\r...\n      JUMPDEST \t\t\t    value += 1;\\r\\n    }\\r\\n\\r...\n      SWAP3 \t\t\tctor(uint _initialValue) {\\r\\n...\n      SWAP2 \t\t\tctor(uint _initialValue) {\\r\\n...\n      POP \t\t\tctor(uint _initialValue) {\\r\\n...\n      POP \t\t\tctor(uint _initialValue) {\\r\\n...\n      JUMP \t\t\tctor(uint _initialValue) {\\r\\n...\n    tag 30\t\t\t() public {\\r\\n        require...\n      JUMPDEST \t\t\t() public {\\r\\n        require...\n      PUSH 0\t\t\t        val\n      DUP3 \t\t\t// Get\n      DUP3 \t\t\t\\n  \n      MSTORE \t\t\t   }\\r\\n\\r\\n    // Gett\n      PUSH 20\t\t\tblic\n      DUP3 \t\t\tdy \n      ADD \t\t\tlready public \n      SWAP1 \t\t\ton (optional, already public \n      POP \t\t\ton (optional, already public \n      SWAP3 \t\t\t() public {\\r\\n        require...\n      SWAP2 \t\t\t() public {\\r\\n        require...\n      POP \t\t\t() public {\\r\\n        require...\n      POP \t\t\t() public {\\r\\n        require...\n      JUMP \t\t\t() public {\\r\\n        require...\n    tag 31\t\t\tks)\\r\\n    function getValue()...\n      JUMPDEST \t\t\tks)\\r\\n    function getValue()...\n      PUSH 56616C75652063616E6E6F74206265206E656761746976650000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\tks)\\r\\n    function getValue()...\n      JUMP \t\t\tks)\\r\\n    function getValue()...\n    tag 32\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 43\t\t\t\n      PUSH 18\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 30\t\t\t\n      JUMP \t\t\t\n    tag 43\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 44\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 31\t\t\t\n      JUMP \t\t\t\n    tag 44\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 22\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 46\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 32\t\t\t\n      JUMP \t\t\t\n    tag 46\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 33\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 49\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 28\t\t\t\n      JUMP \t\t\t\n    tag 49\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 50\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 28\t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 51\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 52\t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 27\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 54\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 28\t\t\t\n      JUMP \t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 55\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 28\t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 56\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 57\t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 57\t\t\t\n      JUMPDEST \t\t\t\n    tag 56\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}